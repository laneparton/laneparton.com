---
import Layout from "../layouts/Layout.astro";
import bookmarks from "../content/bookmarks/bookmarks.json";
import CalloutCard from "../components/CalloutCard.astro";

const groupedBookmarks = {};

bookmarks.forEach(bookmark => {
    const date = new Date(bookmark.add_date);
    const monthYear = date.toLocaleString('default', { month: 'long', year: 'numeric' });

    if (!groupedBookmarks[monthYear]) {
      groupedBookmarks[monthYear] = [];
    }

    groupedBookmarks[monthYear].push(bookmark);
});


---

<Layout title="Links">
  <div class="container mx-auto mt-32">
    <h2 class="text-4xl text-white mb-4">Links</h2>
    <p class="mb-8">
      Things I found interesting and worthy of looking at again 🙂
    </p>

    <CalloutCard>
      <p>👋🏻 Curious how this is generated? Read more <a href="/posts/convert-bookmarks-to-links-astro/">here</a>.</p>
    </CalloutCard>

    {
      Object.entries(groupedBookmarks).map(([monthYear, bookmarks]) => (
        <div key={monthYear}>
          <h3 class="text-2xl text-white mt-8 mb-4">{monthYear}</h3>
          <ul>
            {
            bookmarks.map((bookmark) => {
              const date = new Date(bookmark.add_date);

              return (
              <li key={bookmark.href} class="mb-2 text-lg flex items-center">
                <img src={bookmark.icon} class="mr-2" />
                <a href={bookmark.href}>
                  {bookmark.title}
                </a>
                <span class="ml-2 text-xs leading-none">{date.toLocaleDateString("en-US")}</span>
              </li>
            )})
          }
          </ul>
        </div>
      ))
    }
  </div>
</Layout>